<?xml version="1.0"?>
<doc>
    <assembly>
        <name>dotNetTips.Utility.Standard.Tester</name>
    </assembly>
    <members>
        <member name="T:dotNetTips.Utility.Standard.Tester.Collections.PersonCollection`1">
            <summary>
            Class PersonCollection.
            Implements the <see cref="T:System.Collections.Generic.List`1" />
            </summary>
            <typeparam name="T"></typeparam>
            <seealso cref="T:System.Collections.Generic.List`1" />
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.Collections.PersonCollection`1.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:dotNetTips.Utility.Standard.Tester.Collections.PersonCollection`1" />.
            </summary>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.Collections.PersonCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of <see cref="T:dotNetTips.Utility.Standard.Tester.Collections.PersonCollection`1" />.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.Collections.PersonCollection`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of <see cref="T:dotNetTips.Utility.Standard.Tester.Collections.PersonCollection`1" />.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="T:dotNetTips.Utility.Standard.Tester.ControlChars">
            <summary>
            Class ControlChars.
            </summary>
        </member>
        <member name="F:dotNetTips.Utility.Standard.Tester.ControlChars.Back">
            <summary>
            Back
            </summary>
        </member>
        <member name="F:dotNetTips.Utility.Standard.Tester.ControlChars.BackSlash">
            <summary>
            Back Slash
            </summary>
        </member>
        <member name="F:dotNetTips.Utility.Standard.Tester.ControlChars.Colon">
            <summary>
            The colon
            </summary>
        </member>
        <member name="F:dotNetTips.Utility.Standard.Tester.ControlChars.Comma">
            <summary>
            Comma
            </summary>
        </member>
        <member name="F:dotNetTips.Utility.Standard.Tester.ControlChars.Cr">
            <summary>
            CR
            </summary>
        </member>
        <member name="F:dotNetTips.Utility.Standard.Tester.ControlChars.CRLF">
            <summary>
            CRLF
            </summary>
        </member>
        <member name="F:dotNetTips.Utility.Standard.Tester.ControlChars.DoubleQuote">
            <summary>
            The double quote
            </summary>
        </member>
        <member name="F:dotNetTips.Utility.Standard.Tester.ControlChars.FormFeed">
            <summary>
            Form feed
            </summary>
        </member>
        <member name="F:dotNetTips.Utility.Standard.Tester.ControlChars.ForwardSlash">
            <summary>
            Forward slash
            </summary>
        </member>
        <member name="F:dotNetTips.Utility.Standard.Tester.ControlChars.Lf">
            <summary>
            LF
            </summary>
        </member>
        <member name="F:dotNetTips.Utility.Standard.Tester.ControlChars.NewLine">
            <summary>
            New line
            </summary>
        </member>
        <member name="F:dotNetTips.Utility.Standard.Tester.ControlChars.NullChar">
            <summary>
            Null character
            </summary>
        </member>
        <member name="F:dotNetTips.Utility.Standard.Tester.ControlChars.Quote">
            <summary>
            Quote
            </summary>
        </member>
        <member name="F:dotNetTips.Utility.Standard.Tester.ControlChars.SingleQuote">
            <summary>
            The single quote
            </summary>
        </member>
        <member name="F:dotNetTips.Utility.Standard.Tester.ControlChars.Space">
            <summary>
            Space
            </summary>
        </member>
        <member name="F:dotNetTips.Utility.Standard.Tester.ControlChars.Tab">
            <summary>
            Tab
            </summary>
        </member>
        <member name="F:dotNetTips.Utility.Standard.Tester.ControlChars.Underscore">
            <summary>
            Underscore
            </summary>
        </member>
        <member name="F:dotNetTips.Utility.Standard.Tester.ControlChars.VerticalTab">
            <summary>
            Vertical tab
            </summary>
        </member>
        <member name="T:dotNetTips.Utility.Standard.Tester.Models.Coordinate">
            <summary>
            Struct Coordinate
            Implements the <see cref="T:dotNetTips.Utility.Standard.Tester.Models.ICoordinate" />
            </summary>
            <seealso cref="T:dotNetTips.Utility.Standard.Tester.Models.ICoordinate" />
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.Coordinate.X">
            <summary>
            Gets or sets the x coordinate.
            </summary>
            <value>The x.</value>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.Coordinate.Y">
            <summary>
            Gets or sets the y coordinate.
            </summary>
            <value>The y.</value>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.Models.Coordinate.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> of the coordinates.
            </summary>
            <returns>A <see cref="T:System.String" /> of the coordinates.</returns>
        </member>
        <member name="T:dotNetTips.Utility.Standard.Tester.Models.CoordinateFixed">
            <summary>
            Struct CoordinateFixed
            Implements the <see cref="T:dotNetTips.Utility.Standard.Tester.Models.ICoordinate" />
            Implements the <see cref="T:System.IComparable" />
            </summary>
            <seealso cref="T:System.IComparable" />
            <seealso cref="T:dotNetTips.Utility.Standard.Tester.Models.ICoordinate" />
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.Models.CoordinateFixed.op_Inequality(dotNetTips.Utility.Standard.Tester.Models.CoordinateFixed,dotNetTips.Utility.Standard.Tester.Models.CoordinateFixed)">
            <summary>
            Implements the != operator.
            </summary>
            <param name="cord1">The first coordinate.</param>
            <param name="cord2">The second coordinate.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.Models.CoordinateFixed.op_Equality(dotNetTips.Utility.Standard.Tester.Models.CoordinateFixed,dotNetTips.Utility.Standard.Tester.Models.CoordinateFixed)">
            <summary>
            Implements the == operator.
            </summary>
            <param name="cord1">The first coordinate.</param>
            <param name="cord2">The second coordinate.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.Models.CoordinateFixed.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The object to compare with the this instance.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.Models.CoordinateFixed.Equals(dotNetTips.Utility.Standard.Tester.Models.CoordinateFixed)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this instance.</param>
            <returns>True if the current object is equal to the <paramref name="other">other</paramref> parameter; otherwise, false.</returns>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.Models.CoordinateFixed.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.Models.CoordinateFixed.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> of the coordinates.
            </summary>
            <returns>A <see cref="T:System.String" /> of the coordinates.</returns>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.CoordinateFixed.X">
            <summary>
            Gets or sets the x coordinate.
            </summary>
            <value>The x.</value>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.CoordinateFixed.Y">
            <summary>
            Gets or sets the y coordinate.
            </summary>
            <value>The y.</value>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.Models.CoordinateFixed.CompareTo(System.Object)">
            <summary>
            Compares to.
            </summary>
            <param name="obj">The object.</param>
            <returns>System.Int32.</returns>
            <exception cref="T:System.ArgumentException">obj</exception>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.Models.CoordinateFixed.CompareTo(dotNetTips.Utility.Standard.Tester.Models.CoordinateFixed)">
            <summary>
            Compares to.
            </summary>
            <param name="other">The other.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="T:dotNetTips.Utility.Standard.Tester.Models.ICoordinate">
            <summary>
            Interface ICoordinate used to create Coordinate.
            </summary>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.ICoordinate.X">
            <summary>
            Gets or sets the x coordinate.
            </summary>
            <value>The x value.</value>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.ICoordinate.Y">
            <summary>
            Gets or sets the y coordinate.
            </summary>
            <value>The y value.</value>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.Models.ICoordinate.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> of the coordinates.
            </summary>
            <returns>A <see cref="T:System.String" /> of the coordinates.</returns>
        </member>
        <member name="T:dotNetTips.Utility.Standard.Tester.Models.IPerson">
            <summary>
            The interface for IPerson
            </summary>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.IPerson.Address1">
            <summary>
            Gets or sets address 1.
            </summary>
            <value>The address1.</value>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.IPerson.Address2">
            <summary>
            Gets or sets address2 .
            </summary>
            <value>The address2.</value>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.IPerson.BornOn">
            <summary>
            Gets or sets the born on date, time and local.
            </summary>
            <value>The born on date.</value>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.IPerson.CellPhone">
            <summary>
            Gets or sets the cell phone number.
            </summary>
            <value>The cell phone number.</value>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.IPerson.City">
            <summary>
            Gets or sets the city location.
            </summary>
            <value>The city location.</value>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.IPerson.Country">
            <summary>
            Gets or sets the country for the address.
            </summary>
            <value>The country.</value>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.IPerson.Email">
            <summary>
            Gets or sets the email address.
            </summary>
            <value>The email address.</value>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.IPerson.FirstName">
            <summary>
            Gets or sets the person's first name.
            </summary>
            <value>The first name.</value>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.IPerson.HomePhone">
            <summary>
            Gets or sets the home phone number.
            </summary>
            <value>The home phone number.</value>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.IPerson.Id">
            <summary>
            Gets or sets the person's identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.IPerson.LastName">
            <summary>
            Gets or sets the person's last name.
            </summary>
            <value>The last name.</value>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.IPerson.PostalCode">
            <summary>
            Gets or sets the postal code for the address.
            </summary>
            <value>The postal code for the address.</value>
        </member>
        <member name="T:dotNetTips.Utility.Standard.Tester.Models.Person">
            <summary>
            The Person class.
            Implements the <see cref="T:dotNetTips.Utility.Standard.Tester.Models.IPerson" />
            </summary>
            <seealso cref="T:dotNetTips.Utility.Standard.Tester.Models.IPerson" />
            <seealso cref="T:System.IComparable" />
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.Person.Address1">
            <summary>
            Gets or sets the address1.
            </summary>
            <value>The address1.</value>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.Person.Address2">
            <summary>
            Gets or sets the address2.
            </summary>
            <value>The address2.</value>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.Person.BornOn">
            <summary>
            Gets or sets the born on.
            </summary>
            <value>The born on.</value>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.Person.CellPhone">
            <summary>
            Gets or sets the cell phone.
            </summary>
            <value>The cell phone.</value>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.Person.City">
            <summary>
            Gets or sets the city.
            </summary>
            <value>The city.</value>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.Person.Country">
            <summary>
            Gets or sets the country.
            </summary>
            <value>The country.</value>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.Person.Email">
            <summary>
            Gets the email.
            </summary>
            <value>The email.</value>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.Person.FirstName">
            <summary>
            Gets or sets the first name.
            </summary>
            <value>The first name.</value>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.Person.HomePhone">
            <summary>
            Gets or sets the home phone.
            </summary>
            <value>The home phone.</value>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.Person.Id">
            <summary>
            Gets the identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.Person.LastName">
            <summary>
            Gets or sets the last name.
            </summary>
            <value>The last name.</value>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.Person.PostalCode">
            <summary>
            Gets or sets the postal code.
            </summary>
            <value>The postal code.</value>
        </member>
        <member name="T:dotNetTips.Utility.Standard.Tester.Models.PersonFixed">
            <summary>
            Class PersonFixed.
            Implements the <see cref="T:dotNetTips.Utility.Standard.Tester.Models.Person" />
            Implements the <see cref="T:System.IComparable" />
            </summary>
            <seealso cref="T:dotNetTips.Utility.Standard.Tester.Models.Person" />
            <seealso cref="T:System.IComparable" />
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.Models.PersonFixed.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:dotNetTips.Utility.Standard.Tester.Models.PersonFixed" />.
            </summary>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.Models.PersonFixed.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of <see cref="T:dotNetTips.Utility.Standard.Tester.Models.PersonFixed" />.
            </summary>
            <param name="id">The unique identifier.</param>
            <param name="email">The email address.</param>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.PersonFixed.Age">
            <summary>
            Gets the age.
            </summary>
            <value>The age.</value>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.Models.PersonFixed.CompareTo(System.Object)">
            <summary>Compares to.</summary>
            <param name="obj">The object.</param>
            <returns>System.Int32.</returns>
            <exception cref="T:System.ArgumentException">obj</exception>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.Models.PersonFixed.CompareTo(dotNetTips.Utility.Standard.Tester.Models.PersonFixed)">
            <summary>Compares to.</summary>
            <param name="other">The other.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.Models.PersonFixed.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.Models.PersonFixed.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that returns the person's id.
            </summary>
            <returns>A <see cref="T:System.String" /> that returns the person's id.</returns>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.Models.PersonFixed.CalculateAge">
            <summary>
            Calculates the person's current age.
            </summary>
            <returns>TimeSpan.</returns>
        </member>
        <member name="T:dotNetTips.Utility.Standard.Tester.Models.PersonProper">
            <summary>
            Person class that implements interfaces and validates data.
            Implements the <see cref="T:dotNetTips.Utility.Standard.Tester.Models.IPerson" />
            Implements the <see cref="T:System.IComparable" />
            </summary>
            <seealso cref="T:dotNetTips.Utility.Standard.Tester.Models.IPerson" />
            <seealso cref="T:System.IComparable" />
        </member>
        <member name="F:dotNetTips.Utility.Standard.Tester.Models.PersonProper._address1">
            <summary>
            Address 1.
            </summary>
        </member>
        <member name="F:dotNetTips.Utility.Standard.Tester.Models.PersonProper._address2">
            <summary>
            Address 2.
            </summary>
        </member>
        <member name="F:dotNetTips.Utility.Standard.Tester.Models.PersonProper._bornOn">
            <summary>
            The born on date and time.
            </summary>
        </member>
        <member name="F:dotNetTips.Utility.Standard.Tester.Models.PersonProper._cellPhone">
            <summary>
            The cell phone number.
            </summary>
        </member>
        <member name="F:dotNetTips.Utility.Standard.Tester.Models.PersonProper._city">
            <summary>
            The city name.
            </summary>
        </member>
        <member name="F:dotNetTips.Utility.Standard.Tester.Models.PersonProper._country">
            <summary>
            The country name.
            </summary>
        </member>
        <member name="F:dotNetTips.Utility.Standard.Tester.Models.PersonProper._email">
            <summary>
            The email address.
            </summary>
        </member>
        <member name="F:dotNetTips.Utility.Standard.Tester.Models.PersonProper._firstName">
            <summary>
            The first name.
            </summary>
        </member>
        <member name="F:dotNetTips.Utility.Standard.Tester.Models.PersonProper._homePhone">
            <summary>
            The home phone number.
            </summary>
        </member>
        <member name="F:dotNetTips.Utility.Standard.Tester.Models.PersonProper._id">
            <summary>
            The unique identifier.
            </summary>
        </member>
        <member name="F:dotNetTips.Utility.Standard.Tester.Models.PersonProper._lastName">
            <summary>
            The last name.
            </summary>
        </member>
        <member name="F:dotNetTips.Utility.Standard.Tester.Models.PersonProper._postalCode">
            <summary>
            The postal code.
            </summary>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.Models.PersonProper.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:dotNetTips.Utility.Standard.Tester.Models.PersonFixed" />.
            </summary>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.Models.PersonProper.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of <see cref="T:dotNetTips.Utility.Standard.Tester.Models.PersonFixed" />.
            </summary>
            <param name="id">The unique identifier.</param>
            <param name="email">The email address.</param>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.PersonProper.Address1">
            <summary>
            Gets or sets first address.
            </summary>
            <value>The address1.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Address1 - Address length is limited to 100 characters.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Address1 - Address length is limited to 100 characters.</exception>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.PersonProper.Address2">
            <summary>
            Gets or sets second address.
            </summary>
            <value>The address2.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Address2 - Address length is limited to 100 characters.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Address2 - Address length is limited to 100 characters.</exception>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.PersonProper.Age">
            <summary>
            Gets the person's current age.
            </summary>
            <value>The age.</value>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.PersonProper.BornOn">
            <summary>
            Gets or sets the born on date and time.
            </summary>
            <value>The born on.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">BornOn - Person BornOn cannot be in the future.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">BornOn - Person BornOn cannot be in the future.</exception>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.PersonProper.CellPhone">
            <summary>
            Gets or sets the cell phone number.
            </summary>
            <value>The cell phone.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">CellPhone - Address length is limited to 50 characters.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">CellPhone - Address length is limited to 50 characters.</exception>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.PersonProper.City">
            <summary>
            Gets or sets the city name.
            </summary>
            <value>The city.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">City - City length is limited to 100 characters.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">City - City length is limited to 100 characters.</exception>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.PersonProper.Country">
            <summary>
            Gets or sets the country.
            </summary>
            <value>The country.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Country - Country length is limited to 50 characters.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Country - Country length is limited to 50 characters.</exception>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.PersonProper.Email">
            <summary>
            Gets the email.
            </summary>
            <value>The email.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Email - Email length is limited to 75 characters.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Email - Email length is limited to 75 characters.</exception>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.PersonProper.FirstName">
            <summary>
            Gets or sets the first name.
            </summary>
            <value>The first name.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Email - First name length is limited to 50 characters.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Email - First name length is limited to 50 characters.</exception>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.PersonProper.HomePhone">
            <summary>
            Gets or sets the home phone.
            </summary>
            <value>The home phone.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">HomePhone - Home phone length is limited to 50 characters.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">HomePhone - Home phone length is limited to 50 characters.</exception>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.PersonProper.Id">
            <summary>
            Gets the identifier.
            </summary>
            <value>The identifier.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Id - Id length is limited to 256 characters.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Id - Id length is limited to 50 characters.</exception>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.PersonProper.LastName">
            <summary>
            Gets or sets the last name.
            </summary>
            <value>The last name.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">LastName - Last name length is limited to 50 characters.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">LastName - Last name length is limited to 50 characters.</exception>
        </member>
        <member name="P:dotNetTips.Utility.Standard.Tester.Models.PersonProper.PostalCode">
            <summary>
            Gets or sets the postal code.
            </summary>
            <value>The postal code.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">PostalCode - Postal code length is limited to 20 characters.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">PostalCode - Postal code length is limited to 15 characters.</exception>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.Models.PersonProper.CompareTo(System.Object)">
            <summary>Compares to.</summary>
            <param name="obj">The object.</param>
            <returns>System.Int32.</returns>
            <exception cref="T:System.ArgumentException">obj</exception>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.Models.PersonProper.CompareTo(dotNetTips.Utility.Standard.Tester.Models.PersonProper)">
            <summary>Compares to.</summary>
            <param name="other">The other.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.Models.PersonProper.GetHashCode">
            <summary>
            Returns the hash code for this instance based on id.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.Models.PersonProper.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> of the users id.
            </summary>
            <returns>A <see cref="T:System.String" /> of the users id.</returns>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.Models.PersonProper.CalculateAge">
            <summary>
            Calculates the person's current age.
            </summary>
            <returns>TimeSpan.</returns>
        </member>
        <member name="T:dotNetTips.Utility.Standard.Tester.RandomData">
            <summary>
            Methods to randomally generate data for testing.
            </summary>
            <remarks>Original code from: https://github.com/andrewseward/Any-.Net</remarks>
        </member>
        <member name="F:dotNetTips.Utility.Standard.Tester.RandomData.DefaultMaxCharacter">
            <summary>
            The default maximum character for creating words.
            </summary>
        </member>
        <member name="F:dotNetTips.Utility.Standard.Tester.RandomData.DefaultMinCharacter">
            <summary>
            The default minimum character for creating words.
            </summary>
        </member>
        <member name="F:dotNetTips.Utility.Standard.Tester.RandomData.LongTestString">
            <summary>
            Long test string for testing.
            </summary>
        </member>
        <member name="F:dotNetTips.Utility.Standard.Tester.RandomData._domainExtensions">
            <summary>
            The domain extensions used to create random Url's.
            </summary>
        </member>
        <member name="F:dotNetTips.Utility.Standard.Tester.RandomData._lock">
            <summary>
            The synchronize lock
            </summary>
        </member>
        <member name="F:dotNetTips.Utility.Standard.Tester.RandomData._random">
            <summary>
            The object used for retrieving a random number.
            </summary>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.RandomData.Of(System.String[])">
            <summary>
            Picks a radom string from an array.
            </summary>
            <param name="words">The words.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.RandomData.GenerateCharacter">
            <summary>
            Creates a random character.
            </summary>
            <returns>System.Char.</returns>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.RandomData.GenerateCharacter(System.Char,System.Char)">
            <summary>
            Creates a random character.
            </summary>
            <param name="minValue">The minimum character value.</param>
            <param name="maxValue">The maximum character value.</param>
            <returns>System.Char.</returns>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.RandomData.GenerateCoordinate``1">
            <summary>
            Creates a Coordinate with random values.
            </summary>
            <typeparam name="T"></typeparam>
            <returns>T.</returns>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.RandomData.GenerateCoordinateCollection``1(System.Int32)">
            <summary>
            Creates collection of coordinates.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collectionCount">The collection count.</param>
            <returns>List&lt;T&gt;.</returns>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.RandomData.GenerateDecimal(System.Decimal,System.Decimal,System.Int32)">
            <summary>
            Creates a random decimal value.
            </summary>
            <param name="minValue">The minimum value.</param>
            <param name="maxValue">The maximum value.</param>
            <param name="decimalPlaces">The decimal places.</param>
            <returns>System.Decimal.</returns>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.RandomData.GenerateDomainExtension">
            <summary>
            Returns a random domain extension.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.RandomData.GenerateEmailAddress">
            <summary>
            Creates a random email address.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.RandomData.GenerateInteger(System.Int32,System.Int32)">
            <summary>
            Creates a random integer value.
            </summary>
            <param name="min">The minimum int.</param>
            <param name="max">The maximum int.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.RandomData.GenerateKey">
            <summary>
            Creates a random key.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.RandomData.GenerateNumber(System.Int32)">
            <summary>
            Creates a random string of number.
            </summary>
            <param name="length">The length.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.RandomData.GeneratePerson``1(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a IPerson type with random values.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="addressLength">Length of the address.</param>
            <param name="cityLength">Length of the city.</param>
            <param name="countryLength">Length of the country.</param>
            <param name="firstNameLength">First length of the name.</param>
            <param name="lastNameLength">Last length of the name.</param>
            <param name="postalCodeLength">Length of the postal code.</param>
            <returns>T.</returns>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.RandomData.GeneratePersonCollection``1(System.Int32)">
            <summary>
            Creates an IPerson collection.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collectionCount">The collection count.</param>
            <returns>List&lt;PersonFixed&gt;.</returns>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.RandomData.GeneratePhoneNumberUSA">
            <summary>
            Creates a US phone number.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.RandomData.GenerateRelativeUrl">
            <summary>
            Creates a random relative url.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.RandomData.GenerateUrl">
            <summary>
            Creates a random Url.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.RandomData.GenerateUrlHostName">
            <summary>
            Creates a randome url host name.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.RandomData.GenerateUrlHostnameNoProtocol">
            <summary>
            Creates a url without a protocol.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.RandomData.GenerateUrlHostnameNoSubdomain">
            <summary>
            Creates host name without a subdomain.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.RandomData.GenerateUrlPart">
            <summary>
            Create a random url part.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.RandomData.GenerateWord(System.Int32)">
            <summary>
            Creates a random word.
            </summary>
            <param name="length">The length.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.RandomData.GenerateWord(System.Int32,System.Int32)">
            <summary>
            Creates a random word.
            </summary>
            <param name="minLength">The minimum length.</param>
            <param name="maxLength">The maximum length.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.RandomData.GenerateWord(System.Int32,System.Char,System.Char)">
            <summary>
            Creates a random word.
            </summary>
            <param name="length">The length.</param>
            <param name="minCharacter">The minimum character.</param>
            <param name="maxCharacter">The maximum character.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.RandomData.GenerateWord(System.Int32,System.Int32,System.Char,System.Char)">
            <summary>
            Creates a random word.
            </summary>
            <param name="minLength">The minimum length.</param>
            <param name="maxLength">The maximum length.</param>
            <param name="minCharacter">The minimum character.</param>
            <param name="maxCharacter">The maximum character.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.RandomData.GenerateRandomFileName">
            <summary>
            Generates the random file name with path (users temp folder).
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.RandomData.GenerateRandomFileName(System.Int32,System.String)">
            <summary>
            Generates the random name of the file.
            </summary>
            <param name="fileNameLength">Length of the file name.</param>
            <param name="extension">The extension.</param>
            <returns>System.String.</returns>
            TODO Edit XML Comment Template for GenerateRandomFileName
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.RandomData.GenerateTempFile(System.Int32)">
            <summary>
            Generates the file.
            </summary>
            <param name="fileLength">The length.</param>
            <returns>System.String.</returns>
            TODO Edit XML Comment Template for GenerateFile
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.RandomData.GenerateFile(System.String,System.Int32)">
            <summary>
            Generates the file.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="fileLength">Length of the file.</param>
            <returns>System.String.</returns>
            TODO Edit XML Comment Template for GenerateFile
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.RandomData.GenerateFiles(System.Int32,System.Int32)">
            <summary>
            Generates files.
            </summary>
            <param name="count">The file count.</param>
            <param name="fileLength">Length of the file.</param>
            <returns>System.ValueTuple&lt;System.String, IEnumerable&lt;System.String&gt;&gt;.</returns>
        </member>
        <member name="M:dotNetTips.Utility.Standard.Tester.RandomData.GenerateFiles(System.Int32,System.Int32,System.String)">
            <summary>
            Generates the files.
            </summary>
            <param name="count">The count.</param>
            <param name="fileLength">Length of the file.</param>
            <param name="fileExtension">The file extension.</param>
            <returns>System.ValueTuple&lt;System.String, IEnumerable&lt;System.String&gt;&gt;.</returns>
            TODO Edit XML Comment Template for GenerateFiles
        </member>
    </members>
</doc>
